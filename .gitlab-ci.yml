stages:
  - build
  - release


default:
  image: docker:latest
  services:
    - name: docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1
  VERSION: $CI_COMMIT_TAG
  LINUX_BIN: "bqat-${VERSION}-linux.AppImage"
  WIN_BIN: "bqat-${VERSION}-win.exe"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/products/${CI_PROJECT_ID}/packages/generic/bqat-gui/${VERSION}"


web:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use
  script:
    - cd web
    - docker buildx build --push --build-arg Version=$CI_COMMIT_TAG -t "${CI_REGISTRY_IMAGE}:$CI_COMMIT_TAG" -t "${CI_REGISTRY_IMAGE}:latest" -f Dockerfile --platform linux/amd64,linux/arm64 .
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG

linux:build:
  stage: build
  image: node:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG
  script:
    - mkdir bin
    - echo "building desktop app for linux"
    - cd desktop/
    - npm install
    - npm run build-linux
    - mv release/$VERSION/*.AppImage ../bin
  artifacts:
    paths:
      - bin/

linux:upload:
  stage: build
  needs:
    - job: linux:build
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG
  script:
    - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/${LINUX_BIN} "${PACKAGE_REGISTRY_URL}/${LINUX_BIN}"'

# windows:build:
#   stage: build
#   image: electronuserland/builder:wine
#   rules:
#     - if: $CI_COMMIT_TAG
#   script:
#     - mkdir bin
#     - echo "building for windows"
#     - cd desktop/
#     - npm install
#     - npm run build-win
#     - mv release/$VERSION/*.exe ../bin
#   artifacts:
#     paths:
#       - bin/

# windows:upload:
#   stage: upload
#   needs:
#     - job: windows:build
#   image: curlimages/curl:latest
#   rules:
#     - if: $CI_COMMIT_TAG
#   script:
#     - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file bin/${WIN_BIN} "${PACKAGE_REGISTRY_URL}/${WIN_BIN}"'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: linux:upload
  script:
    - echo "releasing with new version tag"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: '${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}'
          url: https://gitlab.com/biometix/products/biometric-quality-assessment-tool/bqat-gui/container_registry
        - name: $LINUX_BIN
          url: '${PACKAGE_REGISTRY_URL}/${LINUX_BIN}'
        # - name: $WIN_BIN
        #   url: '${PACKAGE_REGISTRY_URL}/${WIN_BIN}'
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG
