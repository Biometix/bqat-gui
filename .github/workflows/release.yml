name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release-lite:
    name: Rebuild and Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Check out Repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-lite
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Build and push release image
        uses: docker/build-push-action@v4
        with:
          context: ./lite/bqat_gui
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  release-web:
    name: Rebuild and Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Check out Repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Build and push release image
        uses: docker/build-push-action@v4
        with:
          context: ./web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  release-desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      -
        name: Check out Git repository
        uses: actions/checkout@v1
      - 
        name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 20
      -
        name: Build/release Electron app
        uses: paneron/action-electron-builder@v1.8.1
        with:
          github_token: ${{ secrets.github_token }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}